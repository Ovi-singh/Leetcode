class Solution {
public:
    int climbStairs(int n) {
        // Create a vector to store the number of ways to reach each step
        vector<int> v(n + 1, 0);

        // Base case: There's only 1 way to reach step 0 (do nothing)
        v[0] = 1;

        // Base case: Only 1 way to reach step 1 (a single step)
        v[1] = 1;

        // Fill the DP table using the recurrence relation:
        // v[i] = ways to reach (i-1) + ways to reach (i-2)
        for (int i = 2; i <= n; i++) {
            v[i] = v[i - 1] + v[i - 2]; // You can reach step i from (i-1) or (i-2)
        }

        // Return the number of ways to reach the nth step
        return v[n];
    }
};
